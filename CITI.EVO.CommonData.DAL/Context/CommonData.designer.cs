#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CITI.EVO.CommonData.DAL.Context
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Lmis_CommonData")]
	public partial class CommonDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCD_Translation(CD_Translation instance);
    partial void UpdateCD_Translation(CD_Translation instance);
    partial void DeleteCD_Translation(CD_Translation instance);
    partial void InsertCD_Area(CD_Area instance);
    partial void UpdateCD_Area(CD_Area instance);
    partial void DeleteCD_Area(CD_Area instance);
    partial void InsertCD_AreaType(CD_AreaType instance);
    partial void UpdateCD_AreaType(CD_AreaType instance);
    partial void DeleteCD_AreaType(CD_AreaType instance);
    partial void InsertCD_Language(CD_Language instance);
    partial void UpdateCD_Language(CD_Language instance);
    partial void DeleteCD_Language(CD_Language instance);
    partial void InsertCD_MobileIndex(CD_MobileIndex instance);
    partial void UpdateCD_MobileIndex(CD_MobileIndex instance);
    partial void DeleteCD_MobileIndex(CD_MobileIndex instance);
    partial void InsertCD_PhoneIndex(CD_PhoneIndex instance);
    partial void UpdateCD_PhoneIndex(CD_PhoneIndex instance);
    partial void DeleteCD_PhoneIndex(CD_PhoneIndex instance);
    partial void InsertCD_PhoneIndexType(CD_PhoneIndexType instance);
    partial void UpdateCD_PhoneIndexType(CD_PhoneIndexType instance);
    partial void DeleteCD_PhoneIndexType(CD_PhoneIndexType instance);
    #endregion
		
		public CommonDataDataContext() : 
				base(global::CITI.EVO.CommonData.DAL.Properties.Settings.Default.Lmis_CommonDataConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CommonDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommonDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommonDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommonDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CD_Translation> CD_Translations
		{
			get
			{
				return this.GetTable<CD_Translation>();
			}
		}
		
		public System.Data.Linq.Table<CD_Area> CD_Areas
		{
			get
			{
				return this.GetTable<CD_Area>();
			}
		}
		
		public System.Data.Linq.Table<CD_AreaType> CD_AreaTypes
		{
			get
			{
				return this.GetTable<CD_AreaType>();
			}
		}
		
		public System.Data.Linq.Table<CD_CityPhoneCode> CD_CityPhoneCodes
		{
			get
			{
				return this.GetTable<CD_CityPhoneCode>();
			}
		}
		
		public System.Data.Linq.Table<CD_Language> CD_Languages
		{
			get
			{
				return this.GetTable<CD_Language>();
			}
		}
		
		public System.Data.Linq.Table<CD_MobileIndex> CD_MobileIndexes
		{
			get
			{
				return this.GetTable<CD_MobileIndex>();
			}
		}
		
		public System.Data.Linq.Table<CD_PhoneIndex> CD_PhoneIndexes
		{
			get
			{
				return this.GetTable<CD_PhoneIndex>();
			}
		}
		
		public System.Data.Linq.Table<CD_PhoneIndexType> CD_PhoneIndexTypes
		{
			get
			{
				return this.GetTable<CD_PhoneIndexType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CD_Translations")]
	public partial class CD_Translation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _ModuleName;
		
		private string _TrnKey;
		
		private string _LanguagePair;
		
		private string _DefaultText;
		
		private string _TranslatedText;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateChanged;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    partial void OnTrnKeyChanging(string value);
    partial void OnTrnKeyChanged();
    partial void OnLanguagePairChanging(string value);
    partial void OnLanguagePairChanged();
    partial void OnDefaultTextChanging(string value);
    partial void OnDefaultTextChanged();
    partial void OnTranslatedTextChanging(string value);
    partial void OnTranslatedTextChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChangedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public CD_Translation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="NVarChar(50)")]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrnKey", DbType="NVarChar(50)")]
		public string TrnKey
		{
			get
			{
				return this._TrnKey;
			}
			set
			{
				if ((this._TrnKey != value))
				{
					this.OnTrnKeyChanging(value);
					this.SendPropertyChanging();
					this._TrnKey = value;
					this.SendPropertyChanged("TrnKey");
					this.OnTrnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguagePair", DbType="NVarChar(50)")]
		public string LanguagePair
		{
			get
			{
				return this._LanguagePair;
			}
			set
			{
				if ((this._LanguagePair != value))
				{
					this.OnLanguagePairChanging(value);
					this.SendPropertyChanging();
					this._LanguagePair = value;
					this.SendPropertyChanged("LanguagePair");
					this.OnLanguagePairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DefaultText
		{
			get
			{
				return this._DefaultText;
			}
			set
			{
				if ((this._DefaultText != value))
				{
					this.OnDefaultTextChanging(value);
					this.SendPropertyChanging();
					this._DefaultText = value;
					this.SendPropertyChanged("DefaultText");
					this.OnDefaultTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranslatedText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TranslatedText
		{
			get
			{
				return this._TranslatedText;
			}
			set
			{
				if ((this._TranslatedText != value))
				{
					this.OnTranslatedTextChanging(value);
					this.SendPropertyChanging();
					this._TranslatedText = value;
					this.SendPropertyChanged("TranslatedText");
					this.OnTranslatedTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChanged
		{
			get
			{
				return this._DateChanged;
			}
			set
			{
				if ((this._DateChanged != value))
				{
					this.OnDateChangedChanging(value);
					this.SendPropertyChanging();
					this._DateChanged = value;
					this.SendPropertyChanged("DateChanged");
					this.OnDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CD_Area")]
	public partial class CD_Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<decimal> _OLD_ID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Code;
		
		private string _CraCode;
		
		private string _GeoName;
		
		private string _EngName;
		
		private System.Guid _TypeID;
		
		private string _NewCode;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateChanged;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private EntitySet<CD_Area> _Children;
		
		private EntitySet<CD_PhoneIndex> _PhoneIndexes;
		
		private EntityRef<CD_Area> _Parent;
		
		private EntityRef<CD_AreaType> _AreaType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnOLD_IDChanging(System.Nullable<decimal> value);
    partial void OnOLD_IDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCraCodeChanging(string value);
    partial void OnCraCodeChanged();
    partial void OnGeoNameChanging(string value);
    partial void OnGeoNameChanged();
    partial void OnEngNameChanging(string value);
    partial void OnEngNameChanged();
    partial void OnTypeIDChanging(System.Guid value);
    partial void OnTypeIDChanged();
    partial void OnNewCodeChanging(string value);
    partial void OnNewCodeChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChangedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public CD_Area()
		{
			this._Children = new EntitySet<CD_Area>(new Action<CD_Area>(this.attach_Children), new Action<CD_Area>(this.detach_Children));
			this._PhoneIndexes = new EntitySet<CD_PhoneIndex>(new Action<CD_PhoneIndex>(this.attach_PhoneIndexes), new Action<CD_PhoneIndex>(this.detach_PhoneIndexes));
			this._Parent = default(EntityRef<CD_Area>);
			this._AreaType = default(EntityRef<CD_AreaType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OLD_ID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> OLD_ID
		{
			get
			{
				return this._OLD_ID;
			}
			set
			{
				if ((this._OLD_ID != value))
				{
					this.OnOLD_IDChanging(value);
					this.SendPropertyChanging();
					this._OLD_ID = value;
					this.SendPropertyChanged("OLD_ID");
					this.OnOLD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Parent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(400)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CraCode", DbType="NVarChar(400)")]
		public string CraCode
		{
			get
			{
				return this._CraCode;
			}
			set
			{
				if ((this._CraCode != value))
				{
					this.OnCraCodeChanging(value);
					this.SendPropertyChanging();
					this._CraCode = value;
					this.SendPropertyChanged("CraCode");
					this.OnCraCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string GeoName
		{
			get
			{
				return this._GeoName;
			}
			set
			{
				if ((this._GeoName != value))
				{
					this.OnGeoNameChanging(value);
					this.SendPropertyChanging();
					this._GeoName = value;
					this.SendPropertyChanged("GeoName");
					this.OnGeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngName", DbType="NVarChar(200)")]
		public string EngName
		{
			get
			{
				return this._EngName;
			}
			set
			{
				if ((this._EngName != value))
				{
					this.OnEngNameChanging(value);
					this.SendPropertyChanging();
					this._EngName = value;
					this.SendPropertyChanged("EngName");
					this.OnEngNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._AreaType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCode", DbType="NVarChar(50)")]
		public string NewCode
		{
			get
			{
				return this._NewCode;
			}
			set
			{
				if ((this._NewCode != value))
				{
					this.OnNewCodeChanging(value);
					this.SendPropertyChanging();
					this._NewCode = value;
					this.SendPropertyChanged("NewCode");
					this.OnNewCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChanged
		{
			get
			{
				return this._DateChanged;
			}
			set
			{
				if ((this._DateChanged != value))
				{
					this.OnDateChangedChanging(value);
					this.SendPropertyChanging();
					this._DateChanged = value;
					this.SendPropertyChanged("DateChanged");
					this.OnDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_Area_CD_Area", Storage="_Children", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<CD_Area> Children
		{
			get
			{
				return this._Children;
			}
			set
			{
				this._Children.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_Area_CD_PhoneIndex", Storage="_PhoneIndexes", ThisKey="ID", OtherKey="AreaID")]
		public EntitySet<CD_PhoneIndex> PhoneIndexes
		{
			get
			{
				return this._PhoneIndexes;
			}
			set
			{
				this._PhoneIndexes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_Area_CD_Area", Storage="_Parent", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public CD_Area Parent
		{
			get
			{
				return this._Parent.Entity;
			}
			set
			{
				CD_Area previousValue = this._Parent.Entity;
				if (((previousValue != value) 
							|| (this._Parent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent.Entity = null;
						previousValue.Children.Remove(this);
					}
					this._Parent.Entity = value;
					if ((value != null))
					{
						value.Children.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_AreaType_CD_Area", Storage="_AreaType", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public CD_AreaType AreaType
		{
			get
			{
				return this._AreaType.Entity;
			}
			set
			{
				CD_AreaType previousValue = this._AreaType.Entity;
				if (((previousValue != value) 
							|| (this._AreaType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreaType.Entity = null;
						previousValue.Areas.Remove(this);
					}
					this._AreaType.Entity = value;
					if ((value != null))
					{
						value.Areas.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(System.Guid);
					}
					this.SendPropertyChanged("AreaType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Children(CD_Area entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Children(CD_Area entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_PhoneIndexes(CD_PhoneIndex entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_PhoneIndexes(CD_PhoneIndex entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CD_AreaTypes")]
	public partial class CD_AreaType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _GeoName;
		
		private string _EngName;
		
		private int _Code;
		
		private int _Level;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateChanged;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private EntitySet<CD_Area> _Areas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGeoNameChanging(string value);
    partial void OnGeoNameChanged();
    partial void OnEngNameChanging(string value);
    partial void OnEngNameChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChangedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public CD_AreaType()
		{
			this._Areas = new EntitySet<CD_Area>(new Action<CD_Area>(this.attach_Areas), new Action<CD_Area>(this.detach_Areas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string GeoName
		{
			get
			{
				return this._GeoName;
			}
			set
			{
				if ((this._GeoName != value))
				{
					this.OnGeoNameChanging(value);
					this.SendPropertyChanging();
					this._GeoName = value;
					this.SendPropertyChanged("GeoName");
					this.OnGeoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngName", DbType="NVarChar(100)")]
		public string EngName
		{
			get
			{
				return this._EngName;
			}
			set
			{
				if ((this._EngName != value))
				{
					this.OnEngNameChanging(value);
					this.SendPropertyChanging();
					this._EngName = value;
					this.SendPropertyChanged("EngName");
					this.OnEngNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChanged
		{
			get
			{
				return this._DateChanged;
			}
			set
			{
				if ((this._DateChanged != value))
				{
					this.OnDateChangedChanging(value);
					this.SendPropertyChanging();
					this._DateChanged = value;
					this.SendPropertyChanged("DateChanged");
					this.OnDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_AreaType_CD_Area", Storage="_Areas", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<CD_Area> Areas
		{
			get
			{
				return this._Areas;
			}
			set
			{
				this._Areas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Areas(CD_Area entity)
		{
			this.SendPropertyChanging();
			entity.AreaType = this;
		}
		
		private void detach_Areas(CD_Area entity)
		{
			this.SendPropertyChanging();
			entity.AreaType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CD_CityPhoneCodes")]
	public partial class CD_CityPhoneCode
	{
		
		private string _CityName;
		
		private System.Nullable<int> _PhoneCode;
		
		public CD_CityPhoneCode()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(255)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneCode", DbType="Int")]
		public System.Nullable<int> PhoneCode
		{
			get
			{
				return this._PhoneCode;
			}
			set
			{
				if ((this._PhoneCode != value))
				{
					this._PhoneCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CD_Languages")]
	public partial class CD_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _DisplayName;
		
		private string _EngName;
		
		private string _NativeName;
		
		private string _Pair;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateChanged;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnEngNameChanging(string value);
    partial void OnEngNameChanged();
    partial void OnNativeNameChanging(string value);
    partial void OnNativeNameChanged();
    partial void OnPairChanging(string value);
    partial void OnPairChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChangedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public CD_Language()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngName", DbType="NVarChar(50)")]
		public string EngName
		{
			get
			{
				return this._EngName;
			}
			set
			{
				if ((this._EngName != value))
				{
					this.OnEngNameChanging(value);
					this.SendPropertyChanging();
					this._EngName = value;
					this.SendPropertyChanged("EngName");
					this.OnEngNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NativeName", DbType="NVarChar(50)")]
		public string NativeName
		{
			get
			{
				return this._NativeName;
			}
			set
			{
				if ((this._NativeName != value))
				{
					this.OnNativeNameChanging(value);
					this.SendPropertyChanging();
					this._NativeName = value;
					this.SendPropertyChanged("NativeName");
					this.OnNativeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pair", DbType="NVarChar(50)")]
		public string Pair
		{
			get
			{
				return this._Pair;
			}
			set
			{
				if ((this._Pair != value))
				{
					this.OnPairChanging(value);
					this.SendPropertyChanging();
					this._Pair = value;
					this.SendPropertyChanged("Pair");
					this.OnPairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChanged
		{
			get
			{
				return this._DateChanged;
			}
			set
			{
				if ((this._DateChanged != value))
				{
					this.OnDateChangedChanging(value);
					this.SendPropertyChanging();
					this._DateChanged = value;
					this.SendPropertyChanged("DateChanged");
					this.OnDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CD_MobileIndexes")]
	public partial class CD_MobileIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _Value;
		
		private string _GeoOperatorName;
		
		private string _EngOperatorName;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateChanged;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnGeoOperatorNameChanging(string value);
    partial void OnGeoOperatorNameChanged();
    partial void OnEngOperatorNameChanging(string value);
    partial void OnEngOperatorNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChangedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public CD_MobileIndex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoOperatorName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string GeoOperatorName
		{
			get
			{
				return this._GeoOperatorName;
			}
			set
			{
				if ((this._GeoOperatorName != value))
				{
					this.OnGeoOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._GeoOperatorName = value;
					this.SendPropertyChanged("GeoOperatorName");
					this.OnGeoOperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngOperatorName", DbType="VarChar(100)")]
		public string EngOperatorName
		{
			get
			{
				return this._EngOperatorName;
			}
			set
			{
				if ((this._EngOperatorName != value))
				{
					this.OnEngOperatorNameChanging(value);
					this.SendPropertyChanging();
					this._EngOperatorName = value;
					this.SendPropertyChanged("EngOperatorName");
					this.OnEngOperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChanged
		{
			get
			{
				return this._DateChanged;
			}
			set
			{
				if ((this._DateChanged != value))
				{
					this.OnDateChangedChanging(value);
					this.SendPropertyChanging();
					this._DateChanged = value;
					this.SendPropertyChanged("DateChanged");
					this.OnDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CD_PhoneIndexes")]
	public partial class CD_PhoneIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PhoneIndexTypeID;
		
		private int _Value;
		
		private System.Guid _AreaID;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateChanged;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private EntityRef<CD_Area> _Area;
		
		private EntityRef<CD_PhoneIndexType> _PhoneIndexType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPhoneIndexTypeIDChanging(System.Guid value);
    partial void OnPhoneIndexTypeIDChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnAreaIDChanging(System.Guid value);
    partial void OnAreaIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChangedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public CD_PhoneIndex()
		{
			this._Area = default(EntityRef<CD_Area>);
			this._PhoneIndexType = default(EntityRef<CD_PhoneIndexType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneIndexTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PhoneIndexTypeID
		{
			get
			{
				return this._PhoneIndexTypeID;
			}
			set
			{
				if ((this._PhoneIndexTypeID != value))
				{
					if (this._PhoneIndexType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhoneIndexTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PhoneIndexTypeID = value;
					this.SendPropertyChanged("PhoneIndexTypeID");
					this.OnPhoneIndexTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChanged
		{
			get
			{
				return this._DateChanged;
			}
			set
			{
				if ((this._DateChanged != value))
				{
					this.OnDateChangedChanging(value);
					this.SendPropertyChanging();
					this._DateChanged = value;
					this.SendPropertyChanged("DateChanged");
					this.OnDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_Area_CD_PhoneIndex", Storage="_Area", ThisKey="AreaID", OtherKey="ID", IsForeignKey=true)]
		public CD_Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				CD_Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.PhoneIndexes.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.PhoneIndexes.Add(this);
						this._AreaID = value.ID;
					}
					else
					{
						this._AreaID = default(System.Guid);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_PhoneIndexType_CD_PhoneIndex", Storage="_PhoneIndexType", ThisKey="PhoneIndexTypeID", OtherKey="ID", IsForeignKey=true)]
		public CD_PhoneIndexType PhoneIndexType
		{
			get
			{
				return this._PhoneIndexType.Entity;
			}
			set
			{
				CD_PhoneIndexType previousValue = this._PhoneIndexType.Entity;
				if (((previousValue != value) 
							|| (this._PhoneIndexType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneIndexType.Entity = null;
						previousValue.PhoneIndexes.Remove(this);
					}
					this._PhoneIndexType.Entity = value;
					if ((value != null))
					{
						value.PhoneIndexes.Add(this);
						this._PhoneIndexTypeID = value.ID;
					}
					else
					{
						this._PhoneIndexTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("PhoneIndexType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CD_PhoneIndexTypes")]
	public partial class CD_PhoneIndexType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateChanged;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private EntitySet<CD_PhoneIndex> _PhoneIndexes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChangedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    #endregion
		
		public CD_PhoneIndexType()
		{
			this._PhoneIndexes = new EntitySet<CD_PhoneIndex>(new Action<CD_PhoneIndex>(this.attach_PhoneIndexes), new Action<CD_PhoneIndex>(this.detach_PhoneIndexes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChanged
		{
			get
			{
				return this._DateChanged;
			}
			set
			{
				if ((this._DateChanged != value))
				{
					this.OnDateChangedChanging(value);
					this.SendPropertyChanging();
					this._DateChanged = value;
					this.SendPropertyChanged("DateChanged");
					this.OnDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_PhoneIndexType_CD_PhoneIndex", Storage="_PhoneIndexes", ThisKey="ID", OtherKey="PhoneIndexTypeID")]
		public EntitySet<CD_PhoneIndex> PhoneIndexes
		{
			get
			{
				return this._PhoneIndexes;
			}
			set
			{
				this._PhoneIndexes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhoneIndexes(CD_PhoneIndex entity)
		{
			this.SendPropertyChanging();
			entity.PhoneIndexType = this;
		}
		
		private void detach_PhoneIndexes(CD_PhoneIndex entity)
		{
			this.SendPropertyChanging();
			entity.PhoneIndexType = null;
		}
	}
}
#pragma warning restore 1591
