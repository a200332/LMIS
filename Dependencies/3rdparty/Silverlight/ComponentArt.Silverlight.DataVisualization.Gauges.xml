<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ComponentArt.Silverlight.DataVisualization.Gauges</name>
    </assembly>
    <members>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph">
            <summary>
            A control that displays two different data values in a compact bullet-graph.
            </summary>
            <remarks>
            <para>Set or bind the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Minimum"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Maximum"/> as well as <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Value"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.TargetValue"/> properties to get a fully functional gauge. 
            The TargetValue is denoted by the marker pointer while the fill of the bar pointer shows Value. </para>
            <para>Minimum and Maximum take on default values of 0 and 100 if not set. It is expected that every value assigned to the Value and TargetValue properties will fall within the Minimum - Maximum range.</para>
            <para> The <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ColorStops"/> property allows the programmer to set and modify the visible colored strip that is drawn below the tick marks.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Gauges_BulletGraph_Welcome.htm">here</a>.
            </remarks>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.IGauge">
            <summary>
            Interface that all gauge controls implement.  
            Allows developers to change basic properties of gauges, regardless of what type of gauge it is.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.IGauge.Value">
            <summary>
            Gets or sets the Value of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.IGauge.EnablePopups">
            <summary>
            Gets or set whether popups are enabled. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.IGauge.EnableAnimation">
            <summary>
            Gets or sets whether gauge animations are enabled. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.IGauge.BackgroundVisibility">
            <summary>
            Gets or sets whether the background layer is visible. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.IGauge.FrameVisibility">
            <summary>
            Gets or sets whether the frame layer is visible.  
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.IGauge.CoverVisibility">
            <summary>
            Gets or sets whether the cover layer is visible. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.EnablePopupsProperty">
            <summary>
            Identifies the EnablePopups dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.EnableAnimationProperty">
            <summary>
            Identifies the EnableAnimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.BackgroundVisibilityProperty">
            <summary>
            Identifies the BackgroundVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.FrameVisibilityProperty">
            <summary>
            Identifies the FrameVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.CoverVisibilityProperty">
            <summary>
            Identifies the CoverVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.TargetValueProperty">
            <summary>
            Identifies the TargetValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ColorStopsProperty">
            <summary>
            Identifies the ColorStops dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.MinimumProperty">
            <summary>
            Identifies the MinValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.MaximumProperty">
            <summary>
            Identifies the MaxValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ValueBrushProperty">
            <summary>
            Identifies the ValueBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.TargetBrushProperty">
            <summary>
            Identifies the TargetBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.AnnotationTextStyleProperty">
            <summary>
            Identifies the style applied to each TextBlock in the annotations.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ResizeControlInternals">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Dispose">
            <summary>
            Releases resources when the control is disposed. 
            To be called by the framework, do not call directly.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ThemeVariantProperty">
            <summary>
            Identifies the ThemeVariant dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Value">
            <summary>
            Gets or Sets the Value of the bar pointer
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.EnablePopups">
            <summary>
            Enables and Disables Popups on this Gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.EnableAnimation">
            <summary>
            Toggles Animations between Value changes.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.BackgroundVisibility">
            <summary>
            Gets or sets whether the background layer is visible. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.FrameVisibility">
            <summary>
            Gets or sets whether the frame layer is visible.  
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.CoverVisibility">
            <summary>
            Gets or sets whether the cover layer is visible. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.TargetValue">
            <summary>
            Gets or Sets the value of the TargetValue marker. This is a Vertical bar for Horizontal BulletGraphs and
            a Horizontal bar for Vertical BulletGraphs.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ColorStops">
            <summary>
            A list of ColorStops applied to the BulletGraph.        
            </summary>
            <remarks>
            These ColorStops color the backround ranges of the gauge according to the values.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Minimum">
            <summary>
            Gets or Sets the minimum value of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Maximum">
            <summary>
            Gets or Sets the maximum value of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.AutoSizeComponents">
            <summary>
            Gets or Sets the whether to auto size the BulletGraph. Default: True
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ValueBrush">
            <summary>
            Gets or Sets the brush applied to the value pointer
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.TargetBrush">
            <summary>
            Gets or Sets the brush applied with the target marker.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.AnnotationTextStyle">
            <summary>
            Gets or Sets the style applied to each TextBlock in the annotations.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Orientation">
            <summary>
            Gets or Sets the orientation of the BulletGraph, either Veritcal or Horizontal.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ControlWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ControlHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Theme">
            <summary>
            Gets or sets the Theme property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.ThemeVariant">
            <summary>
            Gets or sets the ThemeVariant property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.EffectivePalette">
            <summary>
            Gets or sets the EffectivePalette property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BulletGraph.Palette">
            <summary>
            Gets or sets the Palette property.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Animator">
            <summary>
            Controls the animations for all objects that can be animated.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Animator.GetStoryboard(System.Double)">
            <summary>
            Reurns the Storyboard created by this animator.
            </summary>
            <param name="allowedTimeMs"></param>
            <returns>The Storyboard created by this animator.</returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Animator.DesiredDurationMs">
            <summary>
            Duration of the animation in milliseconds
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.PropertyAnimator">
            <summary>
            Animator used for Properties.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.DoubleAnimator">
            <summary>
            Animates Properties that are doubles.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.BarPointer">
            <summary>
            Represents a base class for bar pointers in radial and linear gauges.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer">
            <summary>
            Base class for all pointers including NeedlePointer, BarPointer and Marker pointer for both linear and radial gauges.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.ColorStopsProperty">
            <summary>
            Identifies the ColorStops dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.EnablePopupsProperty">
            <summary>
            Identifies the EnablePopups dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.PopupIndexTemplateProperty">
            <summary>
            Identifies the PopupIndexTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.PopupValueTemplateProperty">
            <summary>
            Identifies the PopupValueTemplate dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.EnableAnimationProperty">
            <summary>
            Identifies the EnableAnimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.ActualValueProperty">
            <summary>
            Identifies the ActualValue dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.SizeProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.ColorStops">
            <summary>
            Gets or sets the collection of colors and stop points that determine the colour of the indicator based on its Value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.EnablePopups">
            <summary>
            Gets or sets the EnablePopups property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.PopupIndexTemplate">
            <summary>
            Gets or sets the PopupIndexTemplate property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.PopupValueTemplate">
            <summary>
            Gets or sets the PopupValueTemplate property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.EnableAnimation">
            <summary>
            Gets or sets the EnableAnimation property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.Value">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.ActualValue">
            <summary>
            Gets the ActualValue property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.Size">
            <summary>
            Relative size of the pointer.  Value of 1 is equivalent to the size of the parent scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.Context">
            <summary>
            The context of this pointer including the parent Scale and Gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.EffectivePalette">
            <summary>
            Gets or sets the EffectivePalette property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Pointer.Palette">
            <summary>
            Gets or sets the Palette property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.BarPointer.#ctor">
            <summary>
            Default constructor for a BarPointer
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.BarPointer.OffsetProperty">
            <summary>
            Identifies the Offset dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.BarPointer.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.BarPointer.Offset">
            <summary>
            Gets or sets the Offset property.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopTransition">
            <summary>
            The type of color transition, gradient or solid.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopTransition.Gradient">
            <summary>
            Smooth transition between color-stops
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopTransition.Solid">
            <summary>
            Abrupt transition between color-stops
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopMappingMode">
            <summary>
            The values of color stops, absolute or relative between 0 and 1.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopMappingMode.Absolute">
            <summary>
            Color stop values are mapped to the acutal values on the range.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopMappingMode.Relative">
            <summary>
            Color Stop values are mapped so that 0 maps to the RangeMin and 1 to RangeMax.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStop">
            <summary>
            Defines a single Color-Value pair in a collection of ColorStops that provide colors to the range.
            </summary>
            <remarks>Must set <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStop.Color"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStop.Offset"/> properties to have a fully functional ColorStop. 
            Values of Offset are either realtive (between 0 and 1) or absolute (actual value) depending on the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.MappingMode"/> value.
            <para>It is a good idea to cover the entire range of values a gauge can take with the color stop offsets.  </para></remarks>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection"/>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStop.ColorProperty">
            <summary>
            Identifies the Color dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStop.OffsetProperty">
            <summary>
            Identifies the Offset dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStop.Color">
            <summary>
            Gets or sets the Color of this stop.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStop.Offset">
            <summary>
            Gets or sets the Offset property.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection">
             <summary>
             A collection of <see cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStop"/>s used to define the colors and values at which they change.
             </summary>
             <remarks>Set <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.MappingMode"/> property in order to define how Offset values of individual stops are interpreted.
             Values of Offset can then be realtive (between 0 and 1) or absolute (actual value) depending on the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.MappingMode"/> value.
             <para>It is a good idea to cover the entire range of values a gauge can take with the color stop offsets. 
            Note that a ColorStop with value of 1 is not needed as there is no need for a new color to start there.</para></remarks>
             <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStop"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.RebuildStops">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.RebuildPaletteColors">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.GetColor(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.GetColor(System.Double,ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopTransition)">
            <summary>
            Returns the Color associated with the provided value and transition type.
            </summary>
            <returns>Color associated with this value</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.GetColorRange(System.Int32)">
            <summary>
            Returns an array of Colors resolved from the control's current Palette
            </summary>
            <param name="count">Number of Colors</param>
            <returns>Array of type Color, resolved from Palette</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.GetColorRange(System.Int32,ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopTransition)">
            <summary>
            Returns an array of Colors resolved from the control's current Palette
            </summary>
            <param name="count">Number of Colors</param>
            <param name="transition">Type of ColorStopTransition to use when generating Colors</param>
            <returns>Array of type Color, resolved from Palette</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.GetColorRange(System.Double,System.Double,System.Int32,ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopTransition)">
            <summary>
            Returns an array of Colors resolved from the control's current Palette
            </summary>
            <param name="minValue">Initial Value</param>
            <param name="maxValue">Final value</param>
            <param name="count">Number of Colors</param>
            <param name="transition">Type of ColorStopTransition to use when generating Colors</param>
            <returns>Array of type Color, resolved from Palette</returns>		
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.ToSortedArray">
            <summary>
            Sorts ColorStops based on their value, in increasing order.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.ToGradientStopCollection(System.Double,System.Double)">
            <summary>
            Converts current ColorStop array to GradientStopCollection
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.ToGradientStopCollection">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.MappingMode">
            <summary>
            Whether the ColorStop values are absolute values or relative to min and max of the range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.Transition">
            <summary>
            Whether the ColorStops have a solid or gradient transition between the stops.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection.Palette">
            <summary>
            The palette to be applied to the ColorStops.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Container">
            <summary>
            ComponentArt Container class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Container.#ctor">
            <summary>
            Initializes a new instance of the Container class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Container.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Container.LayoutRoot">
            <summary>
            Gets a reference to the root Canvas.
            </summary>		
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.GaugeContext">
            <summary>
            Points to the parent gauge within the current context
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.GaugeContext.Gauge">
            <summary>
            The Gauge associated with the range, scale, pointer or gauge.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleContext">
            <summary>
            Points to the parent gauge and scale within the current context
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleContext.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.Scale)">
            <summary>
            Default constructor.
            </summary>
            <param name="scale">The Scale this context refers to.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleContext.Scale">
            <summary>
            Relevant Scale
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleContext.Gauge">
            <summary>
            Relevant Gauge associated with the scale.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext">
            <summary>
            Points to the parent gauge, scale and range within the current context
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.Range)">
            <summary>
            Default constructor.
            </summary>
            <param name="range">The range that this context relates to.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext.Range">
            <summary>
            Relevant Range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext.Scale">
            <summary>
            Relevant Scale associated with the range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext.Gauge">
            <summary>
            Relevant Gauge associated with the range.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.PointerContext">
            <summary>
            Points to the parent gauge, scale, pointer and range within the current context
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.PointerContext.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.Pointer)">
            <summary>
            Default constructor.
            </summary>
            <param name="pointer">Pointer this context relates to.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.PointerContext.Pointer">
            <summary>
            The relevant Pointer.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.PointerContext.Scale">
            <summary>
            Relevant Scale associated with the pointer.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.PointerContext.Gauge">
            <summary>
            Relevant Gauge associated with the pointer.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStopMappingMode">
            <summary>
            The values of Image stops, absolute or relative between 0 and 1.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStop">
            <summary>
            Provides an Image-Value pair, with the image corresponding to the given value.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStop.ImageSourceProperty">
            <summary>
            Identifies the ImageSource dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStop.OffsetProperty">
            <summary>
            Identifies the Offset dependency property. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStop.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStop.ImageSource">
            <summary>
            The url of the image to be used.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStop.Offset">
            <summary>
            The value at which this image should be displayed.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStopCollection">
            <summary>
            Represents a collection of ImageStop entries.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStopCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStopCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStopCollection.RebuildStops">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStopCollection.GetImageSource(System.Double)">
            <summary>
            Returns the image source for the image corresponding to the given value.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStopCollection.ToSortedArray">
            <summary>
            Sorts this collection based on values of ImageStops.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ImageStopCollection.MappingMode">
            <summary>
            Whether the ImageStop values are absolute values or relative to min and max of the range.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RangeMappingMode">
            <summary>
            Whether range values are relative to its size, or absolute values.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RangePosition">
            <summary>
            The position of the range relative to the imaginary middle line (of the parent Scale)
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RangeCollection">
            <summary>
            Collection of Range objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Range">
            <summary>
            Base class for all Ranges.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.SizeProperty">
            <summary>
            Identifies the Size dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkTemplateProperty">
            <summary>
            Identifies the MajorTickMarkTemplate dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkOffsetProperty">
            <summary>
            Identifies the MajorTickMarkOffset dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkStepProperty">
            <summary>
            Identifies the MajorTickMarkStep dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkSizeProperty">
            <summary>
            Identifies the MajorTickMarkSize dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkVisibilityProperty">
            <summary>
            Identifies the MajorTickMarkVisibility dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkPositionProperty">
            <summary>
            Identifies the MajorTickMarkPosition dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkStretchProperty">
            <summary>
            Identifies the MajorTickMarkStretch dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkOrientationProperty">
            <summary>
            Identifies the MajorTickMarkOrientation dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkMappingModeProperty">
            <summary>
            Identifies the MajorTickMarkMappingMode dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkTemplateProperty">
            <summary>
            Identifies the MinorTickMarkTemplate dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkOffsetProperty">
            <summary>
            Identifies the MinorTickMarkOffset dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkStepProperty">
            <summary>
            Identifies the MinorTickMarkStep dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkSizeProperty">
            <summary>
            Identifies the MinorTickMarkSize dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkVisibilityProperty">
            <summary>
            Identifies the MinorTickMarkVisibility dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkPositionProperty">
            <summary>
            Identifies the MinorTickMarkPosition dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkStretchProperty">
            <summary>
            Identifies the MinorTickMarkStretch dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkOrientationProperty">
            <summary>
            Identifies the MinorTickMarkOrientation dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkMappingModeProperty">
            <summary>
            Identifies the MinorTickMarkMappingMode dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationTemplateProperty">
            <summary>
            Identifies the AnnotationTemplate dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationTextStyleProperty">
            <summary>
            Identifies the AnnotationTextStyle dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationOffsetProperty">
            <summary>
            Identifies the AnnotationOffset dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationVisibilityProperty">
            <summary>
            Identifies the AnnotationVisibility dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationStepProperty">
            <summary>
            Identifies the AnnotationStep dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationPositionProperty">
            <summary>
            Identifies the AnnotationPosition dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationMappingModeProperty">
            <summary>
            Identifies the AnnotationMappingMode dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationPlacementProperty">
            <summary>
            Identifies the AnnotationPlacement dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationOrientationProperty">
            <summary>
            Identifies the AnnotationOrientation dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripOffsetProperty">
            <summary>
            Identifies the StripOffset dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripStartSizeProperty">
            <summary>
            Identifies the StripStartSize dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripEndSizeProperty">
            <summary>
            Identifies the StripEndSize dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripPositionProperty">
            <summary>
            Identifies the StripPosition dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripVisibilityProperty">
            <summary>
            Identifies the StripVisibility dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripMappingModeProperty">
            <summary>
            Identifies the StripMappingMode dependency property. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Range.#ctor">
            <summary>
            Initializes a new instance of the Range class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationFormatStringProperty">
            <summary>
            Identifies the AnnotationFormatString dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.ColorStopsProperty">
            <summary>
            Identifies the ColorStops dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Range.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Range.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Range.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.Context">
            <summary>
            The context of this range including the parent Scale and Gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.Size">
            <summary>
            Relative size of the range.  Value of 1 is equivalent to the size of the parent scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.Minimum">
            <summary>
            The value where this Range begins. Can be absolute or relative depending on RangeMappingMode.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.Maximum">
            <summary>
            The value where this range ends.  Can be absolute or relative depending on RangeMappingMode.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkTemplate">
            <summary>
            A custom template that visually represents one MajorTickMark
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkOffset">
            <summary>
            Offset from the imaginary middle line of the Scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkStep">
            <summary>
            Numeric value between two major tickmarks .
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkSize">
            <summary>
            Size override for major tickmarks.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkVisibility">
            <summary>
            Whether major tickmarks are visible or not.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkPosition">
            <summary>
            Major tick mark position relative to the imaginary middle line (of the Scale).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkStretch">
            <summary>
            Stretch of the major tickmarks.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkOrientation">
            <summary>
            Whether major tickmarks are inverted or not.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MajorTickMarkMappingMode">
            <summary>
            Whether major tickmarks are placed at absolute values or relative to min and max of the range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkTemplate">
            <summary>
            A custom template that visually represents one MinorTickMark
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkOffset">
            <summary>
            Offset from the imaginary middle line of the Scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkStep">
            <summary>
            Numeric value between two minor tickmarks .
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkSize">
            <summary>
            Size override for minor tickmarks.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkVisibility">
            <summary>
            Whether minor tickmarks are visible or not.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkPosition">
            <summary>
            Minor tick mark position relative to the imaginary middle line (of the Scale).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkStretch">
            <summary>
            Stretch of the minor tickmarks.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkOrientation">
            <summary>
            Whether minor tickmarks are inverted or not.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.MinorTickMarkMappingMode">
            <summary>
            Whether minor tickmarks are placed at absolute values or relative to min and max of the range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.CustomAnnotations">
            <summary>
            Collection of custom annotations to be applied to this range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationTemplate">
            <summary>
            Custom control template for this range's annotations.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationTextStyle">
            <summary>
            Text Style to be applied to each text annotation.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationOffset">
            <summary>
            Offset from the imaginary middle line of the Scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationVisibility">
            <summary>
            Whether annotations are visible or not.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationStep">
            <summary>
            The numeric value between two annotations.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationPlacement">
            <summary>
            Controls the frequency of annotations in the range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationOrientation">
            <summary>
            How the annotation is alligned relative to the tickmarks.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationPosition">
            <summary>
            Annotation position relative to the imaginary middle line (of the Scale).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationMappingMode">
            <summary>
            Whether annotations are placed at absolute values or relative to min and max of the range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.AnnotationFormatString">
            <summary>
            Gets or sets the AnnotationFormatString property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.ColorStops">
            <summary>
            Gets or sets the ColorStops property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripOffset">
            <summary>
            Offset from the imaginary middle line of the Scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripStartSize">
            <summary>
            Width of the strip at its beginning.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripEndSize">
            <summary>
            Width of the strip at its end.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripPosition">
            <summary>
            Strip position relative to the imaginary middle line (of the Scale).
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripVisibility">
            <summary>
            Whether the strip is visible or not.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.StripMappingMode">
            <summary>
            Whether the strip is placed at absolute values or relative to min and max of the range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.EffectivePalette">
            <summary>
            Gets or sets the EffectivePalette property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Range.Palette">
            <summary>
            Gets or sets the Palette property.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleDirection">
            <summary>
            Whether scale grows from Minimum to Maximum or in the reversed order.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleDirection.Normal">
            <summary>
            Scale will progress from Minimum to Maximum.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleDirection.Reversed">
            <summary>
            Scale will progress from Maximum to Minimum.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleCollection">
            <summary>
            Provides a typed-collection for Scale objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Scale">
            <summary>
            Provides an abstract scale control for gauges.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.#ctor">
            <summary>
            Initializes a new instance of the Scale class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.ScaleLayoutProperty">
            <summary>
            Identifies the ScaleLayout dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnScaleLayoutChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the ScaleLayout property changes.
            </summary>
            <param name="o">The dependency object whose ScaleLayout property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnScaleLayoutChanged(ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout,ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout)">
            <summary>
            Called when the ScaleLayout property changes.
            </summary>
            <param name="oldValue">The previous value of the ScaleLayout property.</param>
            <param name="newValue">The new value of the ScaleLayout property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Minimum property changes.
            </summary>
            <param name="o">The dependency object whose Minimum property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the Minimum property changes.
            </summary>
            <param name="oldValue">The previous value of the Minimum property.</param>
            <param name="newValue">The new value of the Minimum property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Maximum property changes.
            </summary>
            <param name="o">The dependency object whose Maximum property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the Maximum property changes.
            </summary>
            <param name="oldValue">The previous value of the Maximum property.</param>
            <param name="newValue">The new value of the Maximum property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.SizeProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnSizeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Size property changes.
            </summary>
            <param name="o">The dependency object whose Size property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnSizeChanged(System.Double,System.Double)">
            <summary>
            Called when the Size property changes.
            </summary>
            <param name="oldValue">The previous value of the Size property.</param>
            <param name="newValue">The new value of the Size property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CenterPointProperty">
            <summary>
            Identifies the CenterPoint dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnCenterPointChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the CenterPoint property changes.
            </summary>
            <param name="o">The dependency object whose CenterPoint property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnCenterPointChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            Called when the CenterPoint property changes.
            </summary>
            <param name="oldValue">The previous value of the CenterPoint property.</param>
            <param name="newValue">The new value of the CenterPoint property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.IsLogarithmicProperty">
            <summary>
            Identifies the IsLogarithmic dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnIsLogarithmicChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsLogarithmic property changes.
            </summary>
            <param name="o">The dependency object whose IsLogarithmic property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnIsLogarithmicChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the IsLogarithmic property changes.
            </summary>
            <param name="oldValue">The previous value of the IsLogarithmic property.</param>
            <param name="newValue">The new value of the IsLogarithmic property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.LogBaseProperty">
            <summary>
            Identifies the LogBase dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnLogBaseChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the LogBase property changes.
            </summary>
            <param name="o">The dependency object whose LogBase property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnLogBaseChanged(System.Double,System.Double)">
            <summary>
            Called when the LogBase property changes.
            </summary>
            <param name="oldValue">The previous value of the LogBase property.</param>
            <param name="newValue">The new value of the LogBase property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.ReverseDirectionProperty">
            <summary>
            Identifies the ReverseDirection dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnReverseDirectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the ReverseDirection property changes.
            </summary>
            <param name="o">The dependency object whose ReverseDirection property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnReverseDirectionChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the ReverseDirection property changes.
            </summary>
            <param name="oldValue">The previous value of the ReverseDirection property.</param>
            <param name="newValue">The new value of the ReverseDirection property.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CreatePointersCollection">
            <summary>
            Creates a new Pointers collection.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CreateRangesCollection">
            <summary>
            Creates a new Ranges collection.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CreateDefaultRange">
            <summary>
            Creates a default range.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CreateDefaultPointer">
            <summary>
            Creates a default pointer.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CalculateLocalGeometry">
            <summary>
            Calculates the actual geometry for the scale.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CalculateValueRatio(System.Double)">
            <summary>
            Calculates the ratio between Minimum and Maximum for the specified value.
            </summary>
            <param name="value">The value to calculate the ratio for.</param>
            <returns>The ratio between Minimum and Maximum for the specified value.</returns>			
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CreateDefaultBindings(ComponentArt.Silverlight.DataVisualization.Gauges.Pointer)">
            <summary>
            Creates default bindings for the specified Pointer.
            </summary>
            <param name="pointer"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.UpdatePointers">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.UpdateRanges">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.UpdateScaleLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.ranges_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the ranges collection is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.pointers_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the pointers collection is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.ScaleLayout">
            <summary>
            Gets or sets the default visual layout of the scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.Minimum">
            <summary>
            Gets or sets the minimum value of the scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.Maximum">
            <summary>
            Gets or sets the maximum value of the scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.Size">
            <summary>
            Gets or sets the size of the scale, relative to the gauge.
            </summary>
            <remarks>
            The size of the scale is relative to the minimum dimension for radial scales, 
            or the directional dimension for linear scales.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CenterPoint">
            <summary>
            Gets or sets the centerpoint of the scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.IsLogarithmic">
            <summary>
            Gets or sets whether the scale is logarithmic.  Default: false.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.LogBase">
            <summary>
            Gets or sets the logarithmic base of the scale.  Default: 10.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.ReverseDirection">
            <summary>
            Gets or sets the ReverseDirection property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.LayoutRoot">
            <summary>
            Gets a reference to the LayoutRoot canvas.
            </summary>	
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.Context">
            <summary>
            The context of this scale including the parent Gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.GaugeContext">
            <summary>
            Gets a reference to the parent gauge object.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.Ranges">
            <summary>
            Gets the collection of ranges in the scale.
            </summary>		
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.Pointers">
            <summary>
            Gets the collection of pointers in the scale.
            </summary>		
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.MainRange">
            <summary>
            Gets or sets the first (default) range in the scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.MainPointer">
            <summary>
            Gets or sets the first (default) pointer in the scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CalculatedSize">
            <summary>
            Gets the actual size (length) in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Scale.CalculatedCenterPoint">
            <summary>
            Gets the actual centerpoint in pixels.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayoutConverter">
            <summary>
            Converter class for ScaleLayouts.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayoutConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Implementation of a Converter method for ScaleLayouts.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayoutConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Implementation of a Converter method for ScaleLayouts.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout">
            <summary>
            Holds properties related to layout and visual settings of the scale.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout.Size">
            <summary>
            Size of the scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout.CenterPoint">
            <summary>
            Center Point of the scale. Values are relative to the size of the gauge. (0,0) represents the top left corner, (1,1) the bottom right.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder">
            <summary>
            A simple gauge control that consists of a cylinder and the value is displayed by the amount of fill within it.
            </summary>
            <remarks>
            <para>Set or bind the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Minimum"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Maximum"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Value"/> properties to get a fully functional gauge. 
            Minimum and Maximum take on default values of 0 and 100 if not set. It is expected that every value assigned to the Value property will fall within the Minimum - Maximum range.</para>
            <para> The <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.ColorStops"/> property allows the programmer to change the color of the pointer (fill) based on its value.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Gauges_Cylinder_Welcome.htm">Cylinder tutorials</a>.
            </remarks>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.EnablePopupsProperty">
            <summary>
            Identifies the EnablePopups dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.EnableAnimationProperty">
            <summary>
            Identifies the EnableAnimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.BackgroundVisibilityProperty">
            <summary>
            Identifies the BackgroundVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.FrameVisibilityProperty">
            <summary>
            Identifies the FrameVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.CoverVisibilityProperty">
            <summary>
            Identifies the CoverVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageProperty">
            <summary>
            Identifies the Percentage dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ColorStopsProperty">
            <summary>
            Identifies the ColorStops dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelVisibilityProperty">
            <summary>
            Identifies the ValueLabelVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontSizeProperty">
            <summary>
            Identifies the ValueLabelFontSize dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontFamilyProperty">
            <summary>
            Identifies the ValueLabelFontFamily dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontStyleProperty">
            <summary>
            Identifies the ValueLabelFontStyle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontWeightProperty">
            <summary>
            Identifies the ValueLabelFontWeight dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontBrushProperty">
            <summary>
            Identifies the ValueLabelFontBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelVisibilityProperty">
            <summary>
            Identifies the PercentageLabelVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontSizeProperty">
            <summary>
            Identifies the PercentageLabelFontSize dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontFamilyProperty">
            <summary>
            Identifies the PercentageLabelFontFamily dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontStyleProperty">
            <summary>
            Identifies the PercentageLabelFontStyle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontWeightProperty">
            <summary>
            Identifies the PercentageLabelFontWeight dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontBrushProperty">
            <summary>
            Identifies the PercentageLabelFontBrush dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.Dispose">
            <summary>
            Releases resources when the control is disposed. 
            To be called by the framework, do not call directly.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ThemeVariantProperty">
            <summary>
            Identifies the ThemeVariant dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.Value">
            <summary>
            Gets or Sets the value of the bar pointer.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.EnablePopups">
            <summary>
            Gets or sets the EnablePopups property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.EnableAnimation">
            <summary>
            Gets or sets the EnableAnimation property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.BackgroundVisibility">
            <summary>
            Gets or sets whether the background layer is visible. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.FrameVisibility">
            <summary>
            Gets or sets whether the frame layer is visible.  
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.CoverVisibility">
            <summary>
            Gets or sets whether the cover layer is visible. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.Percentage">
            <summary>
            Returns the current Value as a Percentage of the Maximimum, accounting for non-zero Minimums, Read-only
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.Minimum">
            <summary>
            Gets or Sets the minimum value of the gauge. This property represents the lowest supported value settings for this gauge.
            </summary>  
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.Maximum">
            <summary>
            Gets or Sets the maximum value of the gauge. . This property represents the highest supported value settings for this gauge.
            </summary>         
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ColorStops">
            <summary>
            A list of ColorStops applied to the gauge.        
            </summary>
            <remarks>
            This collection contains the ColorStops which are used to color the ranges on the gauge face 
            according to the set value.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelVisibility">
            <summary>
            Gets or sets the ValueLabelVisibility property.  Default: True
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontSize">
            <summary>
            Gets or sets the ValueLabelFontSize property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontFamily">
            <summary>
            Gets or sets the ValueLabelFontFamily property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontStyle">
            <summary>
            Gets or sets the ValueLabelFontStyle property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontWeight">
            <summary>
            Gets or sets the ValueLabelFontWeight property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ValueLabelFontBrush">
            <summary>
            Gets or sets the ValueLabelFontBrush property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelVisibility">
            <summary>
            Gets or sets the PercentageLabelVisibility property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontSize">
            <summary>
            Gets or sets the PercentageLabelFontSize property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontFamily">
            <summary>
            Gets or sets the PercentageLabelFontFamily property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontStyle">
            <summary>
            Gets or sets the PercentageLabelFontStyle property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontWeight">
            <summary>
            Gets or sets the PercentageLabelFontWeight property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.PercentageLabelFontBrush">
            <summary>
            Gets or sets the Foreground color for the PercentageLabel property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.Theme">
            <summary>
            Gets or sets the Theme property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.ThemeVariant">
            <summary>
            Gets or sets the ThemeVariant property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.EffectivePalette">
            <summary>
            Gets or sets the EffectivePalette property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Cylinder.Palette">
            <summary>
            Gets or sets the Palette property.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut">
            <summary>
            ComponentArt HalfDonut control. This control creates a gauge with the appearence of a half circle with a smaller diameter 
            half circle removed from it's lower half causing it to resemble a half donut. Minimum, Maximum and Value are the most common properties
            to be set on the instance.
            </summary>
            <remarks>
            <para>Set or bind the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Minimum"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Maximum"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Value"/> properties to get a fully functional gauge. 
            Minimum and Maximum take on default values of 0 and 100 if not set. It is expected that every value assigned to the Value property will fall within the Minimum - Maximum range.</para>
            <para> The <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.ColorStops"/> property allows the programmer to change the color of the pointer (fill) based on its value.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Gauges_HalfDonut_Welcome.htm">HalfDonut tutorials</a>.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.#ctor">
            <summary>
            ComponentArt HalfDonut control. This control creates a gauge with the appearence of a half circle with a smaller diameter 
            half circle removed from it's lower half causing it to resemble a half donut. Minimum, Maximum and Value are the most common properties
            to be set on the instance.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.EnablePopupsProperty">
            <summary>
            Identifies the EnablePopups dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.EnableAnimationProperty">
            <summary>
            Identifies the EnableAnimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.BackgroundVisibilityProperty">
            <summary>
            Identifies the BackgroundVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.FrameVisibilityProperty">
            <summary>
            Identifies the FrameVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.CoverVisibilityProperty">
            <summary>
            Identifies the CoverVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageProperty">
            <summary>
            Identifies the Percentage dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ColorStopsProperty">
            <summary>
            Identifies the ColorStops dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelVisibilityProperty">
            <summary>
            Identifies the ValueLabelVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontSizeProperty">
            <summary>
            Identifies the ValueLabelFontSize dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontFamilyProperty">
            <summary>
            Identifies the ValueLabelFontFamily dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontStyleProperty">
            <summary>
            Identifies the ValueLabelFontStyle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontWeightProperty">
            <summary>
            Identifies the ValueLabelFontWeight dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontBrushProperty">
            <summary>
            Identifies the ValueLabelFontBrush dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelVisibilityProperty">
            <summary>
            Identifies the PercentageLabelVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontSizeProperty">
            <summary>
            Identifies the PercentageLabelFontSize dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontFamilyProperty">
            <summary>
            Identifies the PercentageLabelFontFamily dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontStyleProperty">
            <summary>
            Identifies the PercentageLabelFontStyle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontWeightProperty">
            <summary>
            Identifies the PercentageLabelFontWeight dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontBrushProperty">
            <summary>
            Identifies the PercentageLabelFontBrush dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.Dispose">
            <summary>
            Releases resources when the control is disposed. 
            To be called by the framework, do not call directly.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ThemeVariantProperty">
            <summary>
            Identifies the ThemeVariant dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.Value">
            <summary>
            Gets or Sets the value of the bar pointer.
            </summary>  
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.EnablePopups">
            <summary>
            Enables or disables Popups which are usually displayed over Pointers.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.EnableAnimation">
            <summary>
            Toggles Animations between values for this gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.BackgroundVisibility">
            <summary>
            Toggles the Visibility of the Background of this gauge. This is not used by default for HalfDonut gauges.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.FrameVisibility">
            <summary>
            Toggles the Visibility of the Frame element of this gauge. This is not used by default for HalfDonut gauges.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.CoverVisibility">
            <summary>
            Toggles the Visibilty of the Cover element of this gauge.  This is not used by default for HalfDonut gauges.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.Percentage">
            <summary>
            Returns the current Value as a Percentage of the Maximimum, accounting for non-zero Minimums, Read-only
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.Minimum">
            <summary>
            Gets or Sets the minimum value of the gauge. This property represents the lowest supported value settings for this gauge.
            </summary>  
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.Maximum">
            <summary>
            Gets or Sets the maximum value of the gauge. . This property represents the highest supported value settings for this gauge.
            </summary>  
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ColorStops">
            <summary>
            A list of ColorStops applied to the gauge.        
            </summary>
            <remarks>
            This collection contains the ColorStops which are used to color the ranges on the gauge face 
            according to the set value.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelVisibility">
            <summary>
            Toggles the visibility of the label populated with the Value of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontSize">
            <summary>
            Sets the FontSize for the label populated with the Value of the gauge. ValueLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontFamily">
            <summary>
            Sets the FontFamily for the label populated with the Value of the gauge. ValueLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontStyle">
            <summary>
            Sets the FontStyle for the label populated with the Value of the gauge. ValueLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontWeight">
            <summary>
            Sets the FontWeight for the label populated with the Value of the gauge. ValueLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ValueLabelFontBrush">
            <summary>
            Sets the Foreground for the label populated with the Value of the gauge. ValueLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelVisibility">
            <summary>
            Toggles the Visibility of a Label showing the Value's Percentage of the Maximum displayed over the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontSize">
            <summary>
            Sets the FontSize for the Label showing the Value's Percentage of the Maximum displayed over the gauge. PercentageLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontFamily">
            <summary>
            Sets the FontFamily for the Label showing the Value's Percentage of the Maximum displayed over the gauge. PercentageLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontStyle">
            <summary>
            Sets the FontStyle for the Label showing the Value's Percentage of the Maximum displayed over the gauge. PercentageLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontWeight">
            <summary>
            Sets the FontWeight for the Label showing the Value's Percentage of the Maximum displayed over the gauge. PercentageLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.PercentageLabelFontBrush">
            <summary>
            Sets the Foreground for the Label showing the Value's Percentage of the Maximum displayed over the gauge. PercentageLabelVisibility should be set to True.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.Theme">
            <summary>
            Gets or sets the Theme property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.ThemeVariant">
            <summary>
            Gets or sets the ThemeVariant property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.EffectivePalette">
            <summary>
            Gets or sets the EffectivePalette property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.HalfDonut.Palette">
            <summary>
            Gets or sets the Palette property.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator">
            <summary>
            ComponentArt Indicator control.  Displays different color or image changes based on how the current value relates to the collection of image or color stops.
            </summary>
            <remarks>
            <para>Set or bind the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Minimum"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Maximum"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Value"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ColorStops"/> properties to get a fully functional gauge. 
            Minimum and Maximum take on default values of 0 and 100 if not set. It is expected that every value assigned to the Value property will fall within the Minimum - Maximum range.
            The control then determines where the Value falls between Minimum and Maximum, and then finds the corresponding color from ColorStops to color the Indicator (fill color).</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Gauges_Indicator_Welcome.htm">Indicator tutorials</a>.
            </remarks>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ValueProperty">
            <summary>
            Identifies the Value dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ImageStopsProperty">
            <summary>
            ImageStops dependency property. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Indicator_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ColorStopsProperty">
            <summary>
            Identifies the ColorStops dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Dispose">
            <summary>
            Releases resources when the control is disposed. 
            To be called by the framework, do not call directly.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ThemeVariantProperty">
            <summary>
            Identifies the ThemeVariant dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ControlWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ControlHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Value">
            <summary>
            Value represented by this indicator.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Minimum">
            <summary>
            Gets or Sets the minimum value of the Indicator.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Maximum">
            <summary>
            Gets or Sets the maximum value of the Indicator.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ColorStops">
            <summary>
            Gets or sets the collection of colors and stop points that determine the colour of the indicator based on its Value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ImageStops">
            <summary>
            The collection of Images and stop points that determine the look of the indicator based on its Value.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Theme">
            <summary>
            Gets or sets the Theme property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.ThemeVariant">
            <summary>
            Gets or sets the ThemeVariant property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.EffectivePalette">
            <summary>
            Gets or sets the EffectivePalette property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Indicator.Palette">
            <summary>
            Gets or sets the Palette property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearAnnotationGroup.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearAnnotationGroup.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearAnnotationGroup.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearAnnotationGroup.PlotAnnotation(ComponentArt.Silverlight.DataVisualization.Gauges.Annotation,ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationPlot)">
            <summary>
            
            </summary>
            <param name="annotation"></param>
            <param name="plot"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearAnnotationGroup.PlotAnnotation(ComponentArt.Silverlight.DataVisualization.Gauges.Annotation,System.Windows.Point,System.Double,System.String)">
            <summary>
            
            </summary>
            <param name="annotation"></param>
            <param name="angle"></param>
            <param name="value"></param>
            <param name="text"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearAnnotationGroup.CreateAnnotations">
            <summary>
            
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearGauge">
            <summary>
            A control representing a Linear gauge.  It can have horizontal or vertical orientation, multiple pointers, ranges and scales.
            </summary>
            <remarks>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.LinearGauge.Orientation"/> property to get a vertical or horizontal gauge.</para>
            <para>Set or bind the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Minimum"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Maximum"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Value"/> properties to get a fully functional gauge. 
            Minimum and Maximum take on default values of 0 and 100 if not set. It is expected that every value assigned to the Value property will fall within the Minimum - Maximum range.</para>
            <para> The <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.ColorStops"/> property allows the programmer to set and modify the visible colored strip that is drawn below the tick marks.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Gauges_LinearGauge_Welcome.htm">LinearGauge tutorials.</a>.
            </remarks> 
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearRange"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearBarPointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearMarkerPointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip"/>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge">
            <summary>
            A base class for all gauges that contain a scale.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge">
            <summary>
            Base class that all Radial, Linear and Numeric gauges derive from.
            </summary>    
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.#ctor">
            <summary>
            Initializes a new instance of the ScaledGauge class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Value property changes.
            </summary>
            <param name="o">The dependency object whose Value property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnValueChanged(System.Double,System.Double)">
            <summary>
            Called when the Value property changes.
            </summary>
            <param name="oldValue">The previous value of the Value property.</param>
            <param name="newValue">The new value of the Value property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.BackgroundVisibilityProperty">
            <summary>
            Identifies the BackgroundVisibility dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnBackgroundVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the BackgroundVisibility property changes.
            </summary>
            <param name="o">The dependency object whose BackgroundVisibility property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnBackgroundVisibilityChanged(System.Windows.Visibility,System.Windows.Visibility)">
            <summary>
            Called when the BackgroundVisibility property changes.
            </summary>
            <param name="oldValue">The previous value of the BackgroundVisibility property.</param>
            <param name="newValue">The new value of the BackgroundVisibility property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.FrameVisibilityProperty">
            <summary>
            Identifies the FrameVisibility dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnFrameVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the FrameVisibility property changes.
            </summary>
            <param name="o">The dependency object whose FrameVisibility property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnFrameVisibilityChanged(System.Windows.Visibility,System.Windows.Visibility)">
            <summary>
            Called when the FrameVisibility property changes.
            </summary>
            <param name="oldValue">The previous value of the FrameVisibility property.</param>
            <param name="newValue">The new value of the FrameVisibility property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.CoverVisibilityProperty">
            <summary>
            Identifies the CoverVisibility dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnCoverVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the CoverVisibility property changes.
            </summary>
            <param name="o">The dependency object whose CoverVisibility property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnCoverVisibilityChanged(System.Windows.Visibility,System.Windows.Visibility)">
            <summary>
            Called when the CoverVisibility property changes.
            </summary>
            <param name="oldValue">The previous value of the CoverVisibility property.</param>
            <param name="newValue">The new value of the CoverVisibility property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.EnablePopupsProperty">
            <summary>
            Identifies the EnablePopups dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnEnablePopupsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the EnablePopups property changes.
            </summary>
            <param name="o">The dependency object whose EnablePopups property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnEnablePopupsChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the EnablePopups property changes.
            </summary>
            <param name="oldValue">The previous value of the EnablePopups property.</param>
            <param name="newValue">The new value of the EnablePopups property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.EnableAnimationProperty">
            <summary>
            Identifies the EnableAnimation dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnEnableAnimationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the EnableAnimation property changes.
            </summary>
            <param name="o">The dependency object whose EnableAnimation property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnEnableAnimationChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the EnableAnimation property changes.
            </summary>
            <param name="oldValue">The previous value of the EnableAnimation property.</param>
            <param name="newValue">The new value of the EnableAnimation property.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.GetSizingMethod(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Gauge.SizingMethod attached property from the specified DependencyObject.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.SetSizingMethod(System.Windows.DependencyObject,ComponentArt.Silverlight.DataVisualization.Gauges.SizingMode)">
            <summary>
            Sets the value of the Gauge.SizingMethod attached property to the specified DependencyObject. 
            </summary>
            <param name="o"></param>
            <param name="value"></param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.SizingMethodProperty">
            <summary>
            Identifies the SizingMethod dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.GetTop(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Gauge.Top attached property from the specified DependencyObject.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.SetTop(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the value of the Gauge.Top attached property to the specified DependencyObject. 
            </summary>
            <param name="o"></param>
            <param name="value"></param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.TopProperty">
            <summary>
            Identifies the Top dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.GetLeft(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Gauge.Left attached property from the specified DependencyObject.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.SetLeft(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the value of the Gauge.Left attached property to the specified DependencyObject. 
            </summary>
            <param name="o"></param>
            <param name="value"></param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.LeftProperty">
            <summary>
            Identifies the Left dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.GetInnerContentMappingMode(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Gauge.InnerContentMappingMode attached property from the specified DependencyObject.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.SetInnerContentMappingMode(System.Windows.DependencyObject,ComponentArt.Silverlight.DataVisualization.Gauges.ContentMappingMode)">
            <summary>
            Sets the value of the Gauge.InnerContentMappingMode attached property to the specified DependencyObject. 
            </summary>
            <param name="o"></param>
            <param name="value"></param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.InnerContentMappingModeProperty">
            <summary>
            Identifies the InnerContentMappingMode dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.EnsureBeforeApplyTemplate">
            <summary>
            Initializes theming prior to ApplyTemplate.  
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.MeasureOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.ArrangeElement(System.Windows.FrameworkElement)">
            <summary>
            Arrange the specified gauge element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.ArrangeInnerElement(System.Windows.FrameworkElement)">
            <summary>
            Arrange the specified inner element on the elements canvas.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.GetHorizontalOffset(System.Windows.FrameworkElement)">
            <summary>
            Gets the horizontal position of the specified framework element.
            </summary>
            <param name="elementy"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.GetVerticalOffset(System.Windows.FrameworkElement)">
            <summary>
            Gets the vertical position of the specified framework element.
            </summary>
            <param name="elementy"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.GetLayoutSize(System.Windows.FrameworkElement)">
            <summary>
            Gets the size of the control.
            </summary>
            <returns>
            The size of the control.
            </returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Draw">
            <summary>
            Draw the control.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Gauge_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event for the Gauge object.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Gauge_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the SizeChanged event for the Gauge object.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.innerElements_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles changes to the InnerElements collection.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.element_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the SizeChanged event for elements in the InnerElements collection.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Dispose">
            <summary>
            Releases resources when the control is disposed. 
            To be called by the framework, do not call directly.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnThemeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Theme property changes.
            </summary>
            <param name="o">The dependency object whose Theme property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnThemeChanged(System.String,System.String)">
            <summary>
            Called when the Theme property changes.
            </summary>
            <param name="oldValue">The previous value of the Theme property.</param>
            <param name="newValue">The new value of the Theme property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.ThemeVariantProperty">
            <summary>
            Identifies the ThemeVariant dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnThemeVariantChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the ThemeVariant property changes.
            </summary>
            <param name="o">The dependency object whose ThemeVariant property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnThemeVariantChanged(System.Nullable{ComponentArt.Silverlight.DataVisualization.ThemeVariant},System.Nullable{ComponentArt.Silverlight.DataVisualization.ThemeVariant})">
            <summary>
            Called when the ThemeVariant property changes.
            </summary>
            <param name="oldValue">The previous value of the ThemeVariant property.</param>
            <param name="newValue">The new value of the ThemeVariant property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.MergedDictionaryCountProperty">
            <summary>
            Identifies the MergedDictionaryCount dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnMergedDictionaryCountChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the MergedDictionaryCount property changes.
            </summary>
            <param name="o">The dependency object whose MergedDictionaryCount property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnMergedDictionaryCountChanged(System.Object,System.Object)">
            <summary>
            Called when the MergedDictionaryCount property changes.
            </summary>
            <param name="oldValue">The previous value of the MergedDictionaryCount property.</param>
            <param name="newValue">The new value of the MergedDictionaryCount property.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.CreateMergedDictionaryBinding">
            <summary>
            Creates a binding to the current Resources.MergedDictionaries.Count property to monitor changes.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnThemeUpdated(System.Boolean)">
            <summary>
            Called when the current Theme has successfully updated.
            </summary>
            <param name="isExplicit">A value indicating whether the current Theme is explicitly defined in a Resources.MergedDictionaries dictionary.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnEffectivePaletteChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the EffectivePalette property changes.
            </summary>
            <param name="o">The dependency object whose EffectivePalette property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnEffectivePaletteChanged(ComponentArt.Silverlight.DataVisualization.Palette,ComponentArt.Silverlight.DataVisualization.Palette)">
            <summary>
            Called when the EffectivePalette property changes.
            </summary>
            <param name="oldValue">The previous value of the EffectivePalette property.</param>
            <param name="newValue">The new value of the EffectivePalette property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnPaletteChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Palette property changes.
            </summary>
            <param name="o">The dependency object whose Palette property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.OnPaletteChanged(ComponentArt.Silverlight.DataVisualization.Palette,ComponentArt.Silverlight.DataVisualization.Palette)">
            <summary>
            Called when the Palette property changes.
            </summary>
            <param name="oldValue">The previous value of the Palette property.</param>
            <param name="newValue">The new value of the Palette property.</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Value">
            <summary>
            Gets or sets the Value of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.BackgroundVisibility">
            <summary>
            Gets or sets whether the background layer is visible.  Default: Visible.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.FrameVisibility">
            <summary>
            Gets or sets whether the frame layer is visible.  Default: Visible.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.CoverVisibility">
            <summary>
            Gets or sets whether the cover layer is visible.  Default: true
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.EnablePopups">
            <summary>
            Gets or set whether popups are enabled.  Default: true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.EnableAnimation">
            <summary>
            Gets or sets whether gauge animations are enabled.  Default: true.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Context">
            <summary>
            Gets the relative context within the gauge hirarchy of this control.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.InnerContent">
            <summary>
            Gets a collection of background text, images and other Silverlight controls that will appear in the background of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.ControlWidth">
            <summary>
            Returns the actual width of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.ControlHeight">
            <summary>
            Returns the actual height of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Popup">
            <summary>
            Gets a reference to the DashboardPopup object used to display popups.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.GaugeWidth">
            <summary>
            Gets or sets the width of the actual gauge within the control.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.GaugeHeight">
            <summary>
            Gets or sets the height of the actual gauge within the control.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Theme">
            <summary>
            Gets or sets the Theme property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.ThemeVariant">
            <summary>
            Gets or sets the ThemeVariant property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.MergedDictionaryCount">
            <summary>
            Gets or sets the MergedDictionaryCount property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.EffectivePalette">
            <summary>
            Gets or sets the actual Palette applied to this Gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Palette">
            <summary>
            Gets or sets the Palette for the Gauge.  If not set, inherited from the Dashboard container.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.#ctor">
            <summary>
            Initializes a new instance of the ScaledGauge class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnPointerEnter(ComponentArt.Silverlight.DataVisualization.Gauges.Pointer)">
            <summary>
            Raises the PointerEnter event.
            </summary>
            <param name="pointer"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnPointerLeave(ComponentArt.Silverlight.DataVisualization.Gauges.Pointer)">
            <summary>
            Raises the PointerLeave event.
            </summary>
            <param name="pointer"></param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Minimum property changes.
            </summary>
            <param name="o">The dependency object whose Minimum property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the Minimum property changes.
            </summary>
            <param name="oldValue">The previous value of the Minimum property.</param>
            <param name="newValue">The new value of the Minimum property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Maximum property changes.
            </summary>
            <param name="o">The dependency object whose Maximum property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the Maximum property changes.
            </summary>
            <param name="oldValue">The previous value of the Maximum property.</param>
            <param name="newValue">The new value of the Maximum property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.ColorStopsProperty">
            <summary>
            Identifies the ColorStops dependency property.
            </summary>
            
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnColorStopsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the ColorStops property changes.
            </summary>
            <param name="o">The dependency object whose ColorStops property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnColorStopsChanged(ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection,ComponentArt.Silverlight.DataVisualization.Gauges.ColorStopCollection)">
            <summary>
            Called when the ColorStops property changes.
            </summary>
            <param name="oldValue">The previous value of the ColorStops property.</param>
            <param name="newValue">The new value of the ColorStops property.</param>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.ScaleLayoutProperty">
            <summary>
            Identifies the ScaleLayout dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnScaleLayoutChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the ScaleLayout property changes.
            </summary>
            <param name="o">The dependency object whose ScaleLayout property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnScaleLayoutChanged(ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout,ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout)">
            <summary>
            Called when the ScaleLayout property changes.
            </summary>
            <param name="oldValue">The previous value of the ScaleLayout property.</param>
            <param name="newValue">The new value of the ScaleLayout property.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.CreateScalesCollection">
            <summary>
            Creates a new Scales collection.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.CreateDefaultScale">
            <summary>
            Creates a default scale for the particular ScaledGauge instance.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.CreateDefaultBindings(ComponentArt.Silverlight.DataVisualization.Gauges.Scale)">
            <summary>
            Creates default bindings for the specified Scale instance.
            </summary>
            <param name="scale"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.OnEffectivePaletteChanged(ComponentArt.Silverlight.DataVisualization.Palette,ComponentArt.Silverlight.DataVisualization.Palette)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.scales_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event for the Scales collection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.PointerEnter">
            <summary>
            Occurs when the pointer enters the Gauge.
            </summary>
        </member>
        <member name="E:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.PointerLeave">
            <summary>
            Occurs when the pointer leaves the Gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Minimum">
            <summary>
            Gets or sets the Minimum property applied to the first Scale of the gauge.  Default: 0.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Maximum">
            <summary>
            Gets or sets the Maximum property aplied to the first Scale of the gauge.  Default: 100.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.ColorStops">
            <summary>
            Gets or sets a collection of ColorStops applied to the gauge.        
            </summary>        
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.ScaleLayout">
            <summary>
            Gets or sets the the visual layout for the scales in this gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Scales">
            <summary>
            Gets a collection of Scales in this gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.PointerCanvas">
            <summary>
            Gets the Canvas for pointer rendering.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.StripCanvas">
            <summary>
            Gets the Canvas for strip rendering.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.TickMarkCanvas">
            <summary>
            Gets the Canvas for tick-mark rendering.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.AnnotationCanvas">
            <summary>
            Gets the Canvas for annotation rendering.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.MainScale">
            <summary>
            Shortcut for the first Scale in the Scales collection.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.MainPointer">
            <summary>
            Shortcut for the first Pointer of the first Scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.MainRange">
            <summary>
            Shortcut for the first Range of the first Scale.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.LinearGauge.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearGauge.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearGauge.OnOrientationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearGauge.OnThemeUpdated(System.Boolean)">
            <summary>
            Called when the current Theme has successfully updated.
            </summary>
            <param name="isExplicit">A value indicating whether the current Theme is explicitly defined in a Resources.MergedDictionaries dictionary.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearGauge.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearGauge.OnScaleLayoutChanged(ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout,ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.LinearGauge.Orientation">
            <summary>
            Whether the gauge is horizontal or vertical.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearMarkerPointer">
            <summary>
            Represents the default pointer for Linear Gauge.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer">
            <summary>
            Base class for marker pointers used with Radial and Linear gauges.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer.ScalePointerProperty">
            <summary>
            Identifies the ScalePointer dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer.IsReversedProperty">
            <summary>
            Identifies the IsReversed dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer.OffsetProperty">
            <summary>
            Identifies the Offset dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer.OnTopProperty">
            <summary>
            Identifies the OnTop dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer.ScalePointer">
            <summary>
            How to resize the pointer relative to the gauge width and height.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer.IsReversed">
            <summary>
            Gets or sets whether to reverse the direction of the MarkerPointer.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer.Offset">
            <summary>
            Gets or sets the vertical offset of the marker pointer with respect to the range.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.MarkerPointer.OnTop">
            <summary>
            Gets or sets whether the marker pointer is on top of the range. Default is true, placing it on the bottom of the range.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearMarkerPointer.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearMarkerPointer.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearMarkerPointer.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.LinearMarkerPointer.AbsoluteSizeProperty">
            <summary>
            Identifies the AbsoluteSize dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.LinearMarkerPointer.AbsoluteSize">
            <summary>
            Gets or Sets the AbsoluteSize of the gauge.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.PointerScale">
            <summary>
            How to resize the pointer relative to the gauge width and height.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.PointerScale.None">
            <summary>
            Pointer not resized
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.PointerScale.Uniform">
            <summary>
            Width and Height uniformly resized.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.PointerScale.Width">
            <summary>
            Only Width resized.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.PointerScale.Height">
            <summary>
            Only Height resized.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale">
            <summary>
            Provides a scale control for linear gauges. The scale contains no visual elements of the gauge, but controls the minimum and maximum values.  Visual elements are found on <see cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearRange"/>(s).
            </summary>
            <remarks><para>Set <see cref="!:Minimum"/> and <see cref="!:Maximum"/> to define the starting and ending values where annotations and tickmarks are drawn.</para>
            It makes sense to add a new scale only if there is a need for multiple pointers that that show very different values and it doesn't make sense to combine them.</remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.CreateDefaultRange">
            <summary>
            Creates a default linear range.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.CreateDefaultPointer">
            <summary>
            Creates a default linear pointer.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.CalculateLocalGeometry">
            <summary>
            Calculates the actual geometry for the scale.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.CalculatePoint(System.Double)">
            <summary>
            Calculates the point for the specified value.
            </summary>
            <param name="value">The value to calculate ht point for.</param>
            <returns>The point for the specified value.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.CalculatePointRange(System.Double[])">
            <summary>
            Calculates the points for the specified angles.
            </summary>
            <param name="values">The values to calculate points for.</param>
            <returns>The points for the specified values.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.CalculatePointRange(System.Double,System.Double,System.Int32)">
            <summary>
            Calculate the equidistant points between two values.
            </summary>
            <param name="minValue">The minimum (starting) value.</param>
            <param name="maxValue">The maximum (ending) value.</param>
            <param name="numAngles">The number of points to calculate.</param>
            <returns>An array of equidistant points between minValue and maxValue.</returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScale.Orientation">
            <summary>
            Whether the scale is vertical or horizontal.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearRange">
            <summary>
            Represents a range used in LinearScales within LinearGauges. The range contains pointer(s), as well as most visual aspects of a gauge including annotations, tick-marks and the coloured strip.
            </summary>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearBarPointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearMarkerPointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearRange.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearRange.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearRange.CalculateDefaultStep">
            <summary>
            Returns the default numeric value between two major tickmarks.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip.DrawGradientStrip">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip.DrawSolidStrip">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip.CreateStripItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip.GetColorStops">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.LinearStrip.UseGaugeColorStops">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearTickMarkGroup.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearTickMarkGroup.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearTickMarkGroup.CreateTickMarks">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearTickMarkGroup.PlotTickMark(ComponentArt.Silverlight.DataVisualization.Gauges.TickMark,ComponentArt.Silverlight.DataVisualization.Gauges.TickMarkPlot)">
            <summary>
            
            </summary>
            <param name="tickMark"></param>
            <param name="plot"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearTickMarkGroup.PlotTickMark(ComponentArt.Silverlight.DataVisualization.Gauges.TickMark,System.Windows.Point,System.Double,System.Double,ComponentArt.Silverlight.DataVisualization.Gauges.RangePosition,ComponentArt.Silverlight.DataVisualization.Gauges.TickMarkStretch,ComponentArt.Silverlight.DataVisualization.Gauges.RangeMappingMode,ComponentArt.Silverlight.DataVisualization.Gauges.TickMarkOrientation)">
            <summary>
            
            </summary>
            <param name="tickMark"></param>
            <param name="point"></param>
            <param name="size"></param>
            <param name="offset"></param>
            <param name="position"></param>
            <param name="stretch"></param>
            <param name="mappingMode"></param>
            <param name="orientation"></param>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScaleLayout">
            <summary>
            Controls the layout properties of a LinearScale.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScaleLayout.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.LinearScaleLayout.Orientation">
            <summary>
            Whether the scale goes left to right or top to bottom.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Digit">
            <summary>
            Class that represents an alphanumeric character within a NumericGauge.  End users of Gauges should have no need to deal with this class directly in most cases.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Digit.#ctor(System.Windows.ResourceDictionary,System.String,System.Double,System.Double)">
            <summary>
            Constructor used by NumericGauge when creating digits it needs to display currently
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Digit.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Digit.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Digit.DigitStyle">
            <summary>
            A resource dictionary containg custom templates used for drawing the digits.  
            Each digit used must have its own template, where the string representation of the digit is the key in the ResourceDictionary.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Digit.Value">
            <summary>
            Gets or sets the Value displayed by this digit.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge">
            <summary>
            A simple gauge that displays alpha-numeric data in a variety of styles.
            </summary>
            <remarks>
            <para>Set or bind the <see cref="!:Value"/> property to the value to be displayed by the gauge.</para>
            To learn more about this control see the list of  <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Gauges_NumericGauge_Welcome.htm">NumericGauge tutorials</a>.
            </remarks>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.ValueProperty">
            <summary>
            Identifies the Value dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.AnimatorProperty">
            <summary>
            Identifies the Animator dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.DecimalBrushProperty">
            <summary>
            Identifies the DecimalBrush dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.NegativeNumberBrushProperty">
            <summary>
            Identifies the NegativeNumberBrush dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.PositiveNumberBrushProperty">
            <summary>
            Identifies the PositiveNumberBrush dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.InnerMarginProperty">
            <summary>
            Identifies the InnerMargin dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.ActualValueProperty">
            <summary>
            Identifies the ActualValue dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.OnPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Used internally to handle changes of dependancy properties.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.DigitMargin">
            <summary>
            Margin before number is displayed in pixels.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.FormatString">
            <summary>
            The format string applied to the value of the gauge when being displayed.  Default is "000.00"
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.InnerMargin">
            <summary>
            The inside margin on the Numeric gauge before first digit is displayed.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.ActualValue">
            <summary>
            Gets or sets the ActualValue property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.DigitStyle">
            <summary>
            A resource dictionary containg custom templates used for drawing the digits.  
            Each digit used must have its own template, where the string representation of the digit is the key in the ResourceDictionary.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.DecimalBrush">
            <summary>
            A Brush used to style the numbers after the decimal point.  Default is a red SolidColourBrush.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.NegativeNumberBrush">
            <summary>
            A Brush used to style the negative whole numbers.  Default is a white SolidColourBrush.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.NumericGauge.PositiveNumberBrush">
            <summary>
            A Brush used to style the positive whole numbers.  Default is a white SolidColourBrush.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationPlacement">
            <summary>
            Predefined intervals for frequency of annotations in the range.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationPlacement.AtMajorTickMarks">
            <summary>
            Places annotations at Major tick-marks only.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationPlacement.AtMinAndMaxValues">
            <summary>
            Places annotations at Min and Max values of the range only.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationPlacement.DefinedByStep">
            <summary>
            Places annotations by at every Step number of values defined on the range, starting at the Range Minimum
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationPlacement.Custom">
            <summary>
            No automatic annotations are included.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationOrientation">
            <summary>
            Predefined orientation for annotation of range values.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationOrientation.Horizontal">
            <summary>
            Annotation is always horizontal, regardles of gauge and orientation.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationOrientation.NormalToScale">
            <summary>
            Placed at 90 degrees from the point being annotated.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationOrientation.TangentToScale">
            <summary>
            Placed parallel with the point being annotated.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationPlot">
            <summary>
            Represents the plot information for rendering an Annotation.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationCollection">
            <summary>
            A collection of individual Annotations.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Annotation">
            <summary>
            Text or image label used to annotate a certain value in the range.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Annotation.TextStyleProperty">
            <summary>
            Identifies the TextStyle dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Annotation.TextProperty">
            <summary>
            Identifies the Text dependency property. 
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Annotation.ValueProperty">
            <summary>
            Identifies the Value dependency property. 
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Annotation.#ctor">
            <summary>
            Default Annotation constructor.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Annotation.TextStyle">
            <summary>
            The TextStyle applied to the text of this Annotation
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Annotation.Text">
            <summary>
            The text displayed by this Annotation
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Annotation.Value">
            <summary>
            Value of this Annotation
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialAnnotationGroup.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext)">
            <summary>
            Initializes a new instance of the RadialAnnotationGroup class.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialAnnotationGroup.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialAnnotationGroup.PlotAnnotation(ComponentArt.Silverlight.DataVisualization.Gauges.Annotation,ComponentArt.Silverlight.DataVisualization.Gauges.AnnotationPlot)">
            <summary>
            
            </summary>
            <param name="annotation"></param>
            <param name="plot"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialAnnotationGroup.PlotAnnotation(ComponentArt.Silverlight.DataVisualization.Gauges.Annotation,System.Double,System.Double,System.String)">
            <summary>
            
            </summary>
            <param name="annotation"></param>
            <param name="angle"></param>
            <param name="value"></param>
            <param name="text"></param>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ContentMappingMode">
            <summary>
            Specifies whether range values are relative to the gauge size, or absolute pixel values.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ContentMappingMode.Absolute">
            <summary>
            Values are interpreted as pixels.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.ContentMappingMode.RelativeToGaugeSize">
            <summary>
            Values are interpreted so that 1 equals the gauge size.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.SizingMode">
            <summary>
            Specifies whether resizing is done by explicitly setting the Width and Height or using a ScaleTransform.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.SizingMode.Scaled">
            <summary>
            Resizing is done via a ScaleTransform.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.SizingMode.Explicit">
            <summary>
            Resizing is done by changing element's Width and Height properties.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.ContentCollection">
            <summary>
            Represents an ordered set of FrameworkElement objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.LinearBarPointer">
            <summary>
            Represents a bar pointer used in Linear gauges.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearBarPointer.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearBarPointer.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.LinearBarPointer.Draw">
            <summary>
            Redraws the pointer.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.NeedlePointer">
            <summary>
            Default pointer for RadialGauge.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.NeedlePointer.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.NeedlePointer.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.NeedlePointer.CalculatedSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.PointerEventArgs">
            <summary>
            EventArgs passed by all events generated by the Pointer.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.PointerEventArgs.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.Pointer)">
            <summary>
            Default constructor
            </summary>
            <param name="p">Pointer in question</param>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.PointerEventArgs.Pointer">
            <summary>
            The Pointer that generated the event.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.PointerCollection">
            <summary>
            A Collection of Pointer objects.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialBarPointer">
            <summary>
            Represents a bar pointer used for RadialGauge.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialBarPointer.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialBarPointer.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGaugeType">
            <summary>
            Represents one of 13 available radial gauges: Circular, Semi-Circular and Quarter-Circular radial gauges of different orientations.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge">
            <summary>
            A control that displays different types of radial gauges: Circular, Semi-Circular and Quarter-Circular radial gauges of different orientations.
            </summary>
            <remarks>
            <para>Set the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.Type"/> property to get the desired shape and orientation of the gauge.</para>
            <para>Set or bind the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Minimum"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Maximum"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Value"/> properties to get a fully functional gauge. 
            Minimum and Maximum take on default values of 0 and 100 if not set. It is expected that every value assigned to the Value property will fall within the Minimum - Maximum range.</para>
            <para> The <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.ColorStops"/> property allows the programmer to set and modify the visible colored strip that is drawn below the tick marks.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Gauges_RadialGauge_Welcome.htm">RadialGauge tutorials.</a>.
            </remarks>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialRange"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.NeedlePointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialBarPointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialMarkerPointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.#ctor">
            <summary>
            Initializes a new instance of the RadialGauge class.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.TypeProperty">
            <summary>
            Identifies the Type dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.OnTypeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Type property changes.
            </summary>
            <param name="o">The dependency object whose Type property has changed.</param>
            <param name="e">A DependencyPropertyChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.OnTypeChanged(ComponentArt.Silverlight.DataVisualization.Gauges.RadialGaugeType,ComponentArt.Silverlight.DataVisualization.Gauges.RadialGaugeType)">
            <summary>
            Called when the Type property changes.
            </summary>
            <param name="oldValue">The previous value of the Type property.</param>
            <param name="newValue">The new value of the Type property.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.OnScaleLayoutChanged(ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout,ComponentArt.Silverlight.DataVisualization.Gauges.ScaleLayout)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.ArrangeInnerElement(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.CreateDefaultScale">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.Draw">
            <summary>
            Draws the Gauge.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.OnThemeUpdated(System.Boolean)">
            <summary>
            Called when the current Theme has successfully updated.
            </summary>
            <param name="isExplicit">A value indicating whether the current Theme is explicitly defined in a Resources.MergedDictionaries dictionary.</param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.CalculateGaugeDimensions">
            <summary>
            
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialGauge.Type">
            <summary>
            Gets or sets the type or geometry of this gauge: circular, semi-circular or quarter-circular.  Default: Circular.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialMarkerPointer">
            <summary>
            Represents a marker pointer used in radial gauges.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialMarkerPointer.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialMarkerPointer.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialMarkerPointer.Draw">
            <summary>
            Draws the pointer
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialRange">
            <summary>
            Configures a range used in radial gauges.  The range contains pointer(s), as well as most visual aspects of a gauge including annotations, tick-marks and the coloured strip.
            </summary>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.NeedlePointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialBarPointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialMarkerPointer"/>
            <seealso cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip"/>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialRange.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialRange.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialRange.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialRange.CalculateDefaultStep">
            <summary>
            Returns the default numeric value between two major tickmarks.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale">
            <summary>
            Provides a scale control for radial gauges.  The scale contains no visual elements of the gauge, but controls the minimum and maximum values.  Visual elements are found on <see cref="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialRange"/>(s).
            </summary>
            <remarks><para>Set <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.StartAngle"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.RotationAngle"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.SweepDirection"/> to control the visual aspects of pointers working in this scale.</para>
            <para>Set <see cref="!:Minimum"/> and <see cref="!:Maximum"/> to define the starting and ending values where annotations and tickmarks are drawn.</para>
            It makes sense to add a new scale only if there is a need for multiple pointers that that show very different values and it doesn't make sense to combine them.</remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.StartAngleProperty">
            <summary>
            Identifies the StartAngle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.RotationAngleProperty">
            <summary>
            Identifies the RotationAngle dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.SweepDirectionProperty">
            <summary>
            Identifies the SweepDirection dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.CreateDefaultRange">
            <summary>
            Creates a default radial range.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.CreateDefaultPointer">
            <summary>
            Creates a default radial pointer.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.CalculateLocalGeometry">
            <summary>
            Calculates the actual geometry for the scale.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.CalculateAngle(System.Double)">
            <summary>
            Calculate the angle in radians for the specified value.
            </summary>
            <param name="value">The value to calcuate the angle for.</param>
            <returns>The angle in radians for the specified value.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.CalculateAngleRange(System.Double[])">
            <summary>
            Calculate the angles in radians for the specified values.
            </summary>
            <param name="values">The value to calculate angles for.</param>
            <returns>The angles in radians for the specified values.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.CalculateAngleRange(System.Double,System.Double,System.Int32)">
            <summary>
            Calculate the equidistant angles between two values.
            </summary>
            <param name="minValue">The minimum (starting) value.</param>
            <param name="maxValue">The maximum (ending) value.</param>
            <param name="numAngles">The number of angles to calculate.</param>
            <returns>An array of equidistant angles between minValue and maxValue.</returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.NormalizeAngle(System.Double)">
            <summary>
            Normalize the specified angle.
            </summary>
            <param name="angle">The angle to normalize.</param>
            <returns>A normalized angle between 0 and 2*PI; 0 &lt;= angle &lt;= 2*PI.</returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.StartAngle">
            <summary>
            Gets or sets the starting angle of the scale. This is the angle where the scale begins.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.RotationAngle">
            <summary>
            Gets or sets the angle of rotation of the scale. Ending angle of scale = StartAngle + RotationAngle
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.SweepDirection">
            <summary>
            Whether the scale goes in clockwise or counter-clockwise direction.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.CalculatedStartAngle">
            <summary>
            Gets the starting angle in radians.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScale.CalculatedRotationAngle">
            <summary>
            Gets the angle of rotation in radians.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScaleLayout">
            <summary>
            Configurs the layout of the RadialScale
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScaleLayout.StartAngle">
            <summary>
            Starting angle of the scale.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScaleLayout.RotationAngle">
            <summary>
            In degrees.  Controls the size of the scale within the gauge.  Ending angle of scale = StartAngle + RotationAngle
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialScaleLayout.SweepDirection">
            <summary>
            Whether the scale goes in clockwise or counter-clockwise direction.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip.DrawGradientStrip">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip.DrawSolidStrip">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip.GetColorStops">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip.CreateStripItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip.GetBitmapSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.RadialStrip.UseGaugeColorStops">
            <summary>
            
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.TickMarkStretch">
            <summary>
            Different ways to stretch the tick marks.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.TickMarkOrientation">
            <summary>
            Normal or inverted (rotated by 180 degrees)
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.TickMarkPlot">
            <summary>
            Represents the plot information for rendering a TickMark.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.TickMark">
            <summary>
            Provides a base tick mark control.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.TickMark.#ctor">
            <summary>
            Initializes a new instance of the TickMark class.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.MajorTickMark">
            <summary>
            Provides a major tick mark control.
            </summary>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.MinorTickMark">
            <summary>
            Provides a minor tick mark control.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.MinorTickMark.#ctor">
            <summary>
            Initializes a new instance of the MinorTickMark class.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialTickMarkGroup.#ctor(ComponentArt.Silverlight.DataVisualization.Gauges.RangeContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialTickMarkGroup.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialTickMarkGroup.Draw">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialTickMarkGroup.CreateTickMarks">
            <summary>
            
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialTickMarkGroup.tickMark_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialTickMarkGroup.PlotTickMark(ComponentArt.Silverlight.DataVisualization.Gauges.TickMark,ComponentArt.Silverlight.DataVisualization.Gauges.TickMarkPlot)">
            <summary>
            
            </summary>
            <param name="tickMark"></param>
            <param name="plot"></param>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.RadialTickMarkGroup.PlotTickMark(ComponentArt.Silverlight.DataVisualization.Gauges.TickMark,System.Double,System.Double,System.Double,ComponentArt.Silverlight.DataVisualization.Gauges.RangePosition,ComponentArt.Silverlight.DataVisualization.Gauges.TickMarkStretch,ComponentArt.Silverlight.DataVisualization.Gauges.RangeMappingMode,ComponentArt.Silverlight.DataVisualization.Gauges.TickMarkOrientation)">
            <summary>
            
            </summary>
            <param name="tickMark"></param>
            <param name="angle"></param>
            <param name="size"></param>
            <param name="offset"></param>
            <param name="position"></param>
            <param name="stretch"></param>
            <param name="mappingMode"></param>
            <param name="orientation"></param>
        </member>
        <member name="T:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer">
            <summary>
            Shows a value as fill in a thermometer style gauge.
            </summary>
            <remarks>
            <para>Set or bind the <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Minimum"/>, <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.Maximum"/> and <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.Gauge.Value"/> properties to get a fully functional gauge. 
            Minimum and Maximum take on default values of 0 and 100 if not set. It is expected that every value assigned to the Value property will fall within the Minimum - Maximum range.</para>
            <para> The <see cref="P:ComponentArt.Silverlight.DataVisualization.Gauges.ScaledGauge.ColorStops"/> property allows the programmer to change the color of the pointer (fill) based on its value.</para>
            To learn more about this control see the list of <a href="mk:@MSITStore:ComponentArt.Silverlight.DataVisualization.chm::/Gauges_Thermometer_Welcome.htm">RadialGauge tutorials.</a>.
            </remarks>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.EnablePopupsProperty">
            <summary>
            Identifies the EnablePopups dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.EnableAnimationProperty">
            <summary>
            Identifies the EnableAnimation dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.BackgroundVisibilityProperty">
            <summary>
            Identifies the BackgroundVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.FrameVisibilityProperty">
            <summary>
            Identifies the FrameVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.CoverVisibilityProperty">
            <summary>
            Identifies the CoverVisibility dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.ColorStopsProperty">
            <summary>
            Identifies the ColorStops dependency property.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.OnApplyTemplate">
            <summary>
            Overriden.  Builds the visual tree for the Gauge control when a new template is applied. 
            To be called by the framework only, do not call directly.
            </summary>
        </member>
        <member name="M:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.Dispose">
            <summary>
            Releases resources when the control is disposed. 
            To be called by the framework, do not call directly.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.EffectivePaletteProperty">
            <summary>
            Identifies the EffectivePalette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.PaletteProperty">
            <summary>
            Identifies the Palette dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.ThemeProperty">
            <summary>
            Identifies the Theme dependency property.
            </summary>
        </member>
        <member name="F:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.ThemeVariantProperty">
            <summary>
            Identifies the ThemeVariant dependency property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.Value">
            <summary>
            Gets or Sets the value of the bar pointer.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.EnablePopups">
            <summary>
            Gets or sets the EnablePopups property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.EnableAnimation">
            <summary>
            Gets or sets the EnableAnimation property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.BackgroundVisibility">
            <summary>
            Gets or sets whether the background layer is visible. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.FrameVisibility">
            <summary>
            Gets or sets whether the frame layer is visible.  
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.CoverVisibility">
            <summary>
            Gets or sets whether the cover layer is visible. 
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.Minimum">
            <summary>
            Gets or Sets the minimum value of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.Maximum">
            <summary>
            Gets or Sets the maximum value of the gauge.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.ColorStops">
            <summary>
            A list of ColorStops that change the color of the thermometer based on the current value.        
            </summary>
            <remarks>
            These ColorStops color the backround according to the values.
            </remarks>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.ControlWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.ControlHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.EffectivePalette">
            <summary>
            Gets or sets the EffectivePalette property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.Palette">
            <summary>
            Gets or sets the Palette property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.Theme">
            <summary>
            Gets or sets the Theme property.
            </summary>
        </member>
        <member name="P:ComponentArt.Silverlight.DataVisualization.Gauges.Thermometer.ThemeVariant">
            <summary>
            Gets or sets the ThemeVariant property.
            </summary>
        </member>
    </members>
</doc>
